// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var HTMLElement$ReView = require("./HTMLElement.bs.js");

var Html = HTMLElement$ReView.WithChild({
      tag: "html"
    });

var Base = HTMLElement$ReView.WithoutChild({
      tag: "base"
    });

var Head = HTMLElement$ReView.WithChild({
      tag: "head"
    });

var Link = HTMLElement$ReView.WithoutChild({
      tag: "link"
    });

var Meta = HTMLElement$ReView.WithoutChild({
      tag: "meta"
    });

var Style = HTMLElement$ReView.WithChild({
      tag: "style"
    });

var Title = HTMLElement$ReView.WithChild({
      tag: "title"
    });

var Body = HTMLElement$ReView.WithChild({
      tag: "body"
    });

var Address = HTMLElement$ReView.WithChild({
      tag: "address"
    });

var Article = HTMLElement$ReView.WithChild({
      tag: "article"
    });

var Footer = HTMLElement$ReView.WithoutChild({
      tag: "footer"
    });

var Header = HTMLElement$ReView.WithChild({
      tag: "header"
    });

var Heading1 = HTMLElement$ReView.WithChild({
      tag: "h1"
    });

var Heading2 = HTMLElement$ReView.WithChild({
      tag: "h2"
    });

var Heading3 = HTMLElement$ReView.WithChild({
      tag: "h3"
    });

var Heading4 = HTMLElement$ReView.WithChild({
      tag: "h4"
    });

var Heading5 = HTMLElement$ReView.WithChild({
      tag: "h5"
    });

var Heading6 = HTMLElement$ReView.WithChild({
      tag: "h6"
    });

var HeadingGroup = HTMLElement$ReView.WithChild({
      tag: "hgroup"
    });

var Main = HTMLElement$ReView.WithChild({
      tag: "main"
    });

var Navigation = HTMLElement$ReView.WithChild({
      tag: "nav"
    });

var Section = HTMLElement$ReView.WithChild({
      tag: "section"
    });

var BlockQuote = HTMLElement$ReView.WithChild({
      tag: "blockquote"
    });

var DescriptionDefinition = HTMLElement$ReView.WithChild({
      tag: "dd"
    });

var Division = HTMLElement$ReView.WithChild({
      tag: "div"
    });

var DescriptionList = HTMLElement$ReView.WithChild({
      tag: "dl"
    });

var DescriptionTerm = HTMLElement$ReView.WithChild({
      tag: "dt"
    });

var FigureCaption = HTMLElement$ReView.WithChild({
      tag: "figcaption"
    });

var Figure = HTMLElement$ReView.WithChild({
      tag: "figure"
    });

var HorizontalRule = HTMLElement$ReView.WithChild({
      tag: "hr"
    });

var ListItem = HTMLElement$ReView.WithChild({
      tag: "li"
    });

var OrderedList = HTMLElement$ReView.WithChild({
      tag: "ol"
    });

var Paragraph = HTMLElement$ReView.WithChild({
      tag: "p"
    });

var Preformat = HTMLElement$ReView.WithChild({
      tag: "pre"
    });

var UnorderedList = HTMLElement$ReView.WithChild({
      tag: "ul"
    });

var Anchor = HTMLElement$ReView.WithChild({
      tag: "a"
    });

var Abbreviation = HTMLElement$ReView.WithChild({
      tag: "abbr"
    });

var BidirectionalIsolate = HTMLElement$ReView.WithChild({
      tag: "bdi"
    });

var BidirectionalOverride = HTMLElement$ReView.WithChild({
      tag: "bdo"
    });

var Break = HTMLElement$ReView.WithChild({
      tag: "br"
    });

var Citation = HTMLElement$ReView.WithChild({
      tag: "cite"
    });

var Code = HTMLElement$ReView.WithChild({
      tag: "code"
    });

var Data = HTMLElement$ReView.WithChild({
      tag: "data"
    });

var Definition = HTMLElement$ReView.WithChild({
      tag: "dfn"
    });

var Emphasis = HTMLElement$ReView.WithChild({
      tag: "em"
    });

var Italic = HTMLElement$ReView.WithChild({
      tag: "i"
    });

var KeyboardInput = HTMLElement$ReView.WithChild({
      tag: "kbd"
    });

var Mark = HTMLElement$ReView.WithChild({
      tag: "mark"
    });

var Quote = HTMLElement$ReView.WithChild({
      tag: "q"
    });

var Ruby = HTMLElement$ReView.WithChild({
      tag: "ruby"
    });

var RubyText = HTMLElement$ReView.WithChild({
      tag: "rt"
    });

var RubyTextContainer = HTMLElement$ReView.WithChild({
      tag: "rtc"
    });

var Sample = HTMLElement$ReView.WithChild({
      tag: "ruby"
    });

exports.Html = Html;
exports.Base = Base;
exports.Head = Head;
exports.Link = Link;
exports.Meta = Meta;
exports.Style = Style;
exports.Title = Title;
exports.Body = Body;
exports.Address = Address;
exports.Article = Article;
exports.Footer = Footer;
exports.Header = Header;
exports.Heading1 = Heading1;
exports.Heading2 = Heading2;
exports.Heading3 = Heading3;
exports.Heading4 = Heading4;
exports.Heading5 = Heading5;
exports.Heading6 = Heading6;
exports.HeadingGroup = HeadingGroup;
exports.Main = Main;
exports.Navigation = Navigation;
exports.Section = Section;
exports.BlockQuote = BlockQuote;
exports.DescriptionDefinition = DescriptionDefinition;
exports.Division = Division;
exports.DescriptionList = DescriptionList;
exports.DescriptionTerm = DescriptionTerm;
exports.FigureCaption = FigureCaption;
exports.Figure = Figure;
exports.HorizontalRule = HorizontalRule;
exports.ListItem = ListItem;
exports.OrderedList = OrderedList;
exports.Paragraph = Paragraph;
exports.Preformat = Preformat;
exports.UnorderedList = UnorderedList;
exports.Anchor = Anchor;
exports.Abbreviation = Abbreviation;
exports.BidirectionalIsolate = BidirectionalIsolate;
exports.BidirectionalOverride = BidirectionalOverride;
exports.Break = Break;
exports.Citation = Citation;
exports.Code = Code;
exports.Data = Data;
exports.Definition = Definition;
exports.Emphasis = Emphasis;
exports.Italic = Italic;
exports.KeyboardInput = KeyboardInput;
exports.Mark = Mark;
exports.Quote = Quote;
exports.Ruby = Ruby;
exports.RubyText = RubyText;
exports.RubyTextContainer = RubyTextContainer;
exports.Sample = Sample;
/* Html Not a pure module */
