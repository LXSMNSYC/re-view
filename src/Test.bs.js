// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Node$ReView = require("./Node.bs.js");
var State$ReView = require("./Hooks/State.bs.js");
var Effect$ReView = require("./Hooks/Effect.bs.js");
var Render$ReView = require("./Render.bs.js");
var Component$ReView = require("./Component.bs.js");

var make = Component$ReView.make("Test", (function (param) {
        var match = State$ReView.use(100);
        var setA = match[1];
        var match$1 = State$ReView.use(200);
        var setB = match$1[1];
        Effect$ReView.use((function (param) {
                Curry._1(setA, (function (param) {
                        return 1000;
                      }));
                Curry._1(setB, (function (param) {
                        return 2000;
                      }));
                return ;
              }), /* [] */0);
        console.log(match[0]);
        console.log(match$1[0]);
        return /* None */0;
      }));

var Test = {
  make: make
};

var make$1 = Component$ReView.make("App", (function (param) {
        var match = State$ReView.use(false);
        var setState = match[1];
        var state = match[0];
        Effect$ReView.use((function (param) {
                setTimeout((function (param) {
                        return Curry._1(setState, (function (param) {
                                      return true;
                                    }));
                      }), 200);
                return ;
              }), /* :: */[
              state,
              /* [] */0
            ]);
        console.log(state);
        if (state) {
          return /* None */0;
        } else {
          return /* Fragment */Block.__(1, [/* :: */[
                      /* Fragment */Block.__(1, [param.children]),
                      /* [] */0
                    ]]);
        }
      }));

var App = {
  make: make$1
};

var root = Node$ReView.make(undefined, undefined);

Render$ReView.call(Curry._1(make$1, {
          children: /* :: */[
            Curry._1(make, /* () */0),
            /* :: */[
              Curry._1(make, /* () */0),
              /* [] */0
            ]
          ]
        }), root);

var dir = (
  function dir(object) {
    console.dir(object, { depth: null });
  }
);

setTimeout((function (param) {
        Curry._1(dir, root);
        Render$ReView.call(Curry._1(make$1, {
                  children: /* :: */[
                    Curry._1(make, /* () */0),
                    /* :: */[
                      Curry._1(make, /* () */0),
                      /* [] */0
                    ]
                  ]
                }), root);
        setTimeout((function (param) {
                return Curry._1(dir, root);
              }), 0);
        return /* () */0;
      }), 1000);

exports.Test = Test;
exports.App = App;
exports.root = root;
exports.dir = dir;
/* make Not a pure module */
